<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.2" reference="MoccaCalendar.MoccaCalendarEventSheet" locale="">
  <web>MoccaCalendar</web>
  <name>MoccaCalendarEventSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1383574876000</creationDate>
  <parent>MoccaCalendarEventClass</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1391894517000</date>
  <contentUpdateDate>1391894517000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
### this macro shows a validation error message if it exists
#macro(showvalidationmessage $message $force)
#if($xcontext.validationStatus.errors.contains($message) || "$!force" == "true") ##
&lt;span class="xErrorMsg"&gt;$escapetool.xml($services.localization.render($message))&lt;/span&gt;
#else ##
&amp;nbsp; ##
#end ##
#end ## end showvalidationmessage
##
#macro(displayDate $field)
#if($xcontext.getAction()=="view" &amp;&amp; $doc.getValue('allDay')==1)
  #set($format = $!doc.getObject('MoccaCalendar.MoccaCalendarEventClass').getxWikiClass().get($field).getProperty('dateFormat').value)
  #if($!format=="")
    #set($format = $xwiki.getSpacePreference('dateformat', 'dd.MM.yyyy'))
  #end
  ## try to cut the time because this event has the all day flag 
  #set($idx=$format.indexOf("H"))
  #if($idx&gt;0)
    #set($format = $format.substring(0,$idx).trim())
  #end
  #set($formattedValue = $escapetool.xml($datetool.format($format, $doc.getValue($field))))
$!formattedValue
#else
$doc.display($field)
#end
#end
##
#set($discard=$xwiki.jsx.use("MoccaCalendar.DatePickerExtension", {'defer': false}))
#if($xcontext.getAction()=="edit")
  #set($discard=$xwiki.jsx.use("MoccaCalendar.MoccaCalendarEventSheet"))
#end
#set($calendar = $parentDoc.getObject('MoccaCalendar.MoccaCalendarClass'))
#if($calendar)
  #set($calendarDoc = $parentDoc)
#end
#if(!$calendar &amp;&amp; "$!request.getParameter('parentFROM')" != "")
  #set($calendarDoc = $xwiki.getDocument($request.getParameter('parentFROM')))
  #set($calendar = $calendarDoc.getObject('MoccaCalendar.MoccaCalendarClass'))
#end
#set($backToCalendarDoc = $xwiki.getDocument($request.getParameter('calendarDoc')))
#if(!$!backToCalendarDoc || $backToCalendarDoc.isNew())
  #set($backToCalendarDoc = $calendarDoc)
#end
#if($xcontext.getAction()=="edit")
  #if($request.xpage=="plain")
    ## we are in modal dialog edit view - no separate parent page widget
    #set($parentParamName="parent")
  #else
    #set($discard=$xwiki.jsx.use("MoccaCalendar.MoccaCalendarEventSheet"))
    #set($parentParamName="_parent")
  #end
#end
{{/velocity}}

{{velocity}}
{{html wiki="true"}}
#set($eventClass = 'MoccaCalendar.MoccaCalendarEventClass')
#set($eventValidationDoc = 'MoccaCalendar.MoccaCalendarEventValidation')
#set ($discard = $doc.use($eventClass))
## add the groovy script to the validation (the xvalidation parameter in the request also works to set the groovy script validation)
#if($xcontext.action=='edit')
&lt;input type="hidden" name="xvalidate" value="1" /&gt;
&lt;input type="hidden" name="xvalidation" value="$eventValidationDoc" /&gt;
## the following values must be added explicitly in "plain edit view", as used by the modal popup
## because the "plain view" does not give them to us
#if($request.xpage=='plain')
&lt;input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" /&gt;
&lt;input type="hidden" name="language" value="$!{escapetool.xml($tdoc.realLanguage)}" /&gt;
#end
#end
(% class="xform" %)
(((
#if($xcontext.action=='view' &amp;&amp; $calendar)
  ; &lt;label for="calendar"&gt;$escapetool.xml($services.localization.render('MoccaCalendar.calendar'))&lt;/label&gt;
  : [[$calendarDoc.getDisplayTitle()&gt;&gt;$calendarDoc.fullName]]
#elseif($xcontext.action=='edit')
#set($hql =", BaseObject as obj where doc.fullName=obj.name and doc.name!='MoccaCalendarTemplate' and obj.className='MoccaCalendar.MoccaCalendarClass' order by doc.title, doc.name")
  ; &lt;label for="calendar"&gt;$escapetool.xml($services.localization.render('MoccaCalendar.calendar'))&lt;/label&gt;
  : &lt;select id="calendarParent" name="$parentParamName"&gt;
#foreach($item in $services.query.hql($hql).execute())
#set($itemdoc = $xwiki.getDocument($item))
#if($!{itemdoc} &amp;&amp; ${itemdoc.hasAccessLevel("edit")})
#set($selected="")
#if($itemdoc.getId() == $calendarDoc.getId())
#set($selected=" selected='selected'")
#end
&lt;option value="$escapetool.html($itemdoc.getFullName())"$selected&gt;$itemdoc.getDisplayTitle()&lt;/option&gt;
#end
#end
&lt;/select&gt;
#end
  ; &lt;label for="MoccaCalendarEvent.MoccaCalendarEventClass_0_title"&gt;$escapetool.xml($doc.displayPrettyName('title', false, false))&lt;span class="xRequired"&gt;&lt;/span&gt;&lt;/label&gt;
  : #if($xcontext.action=='edit')&lt;input id="MoccaCalendarEvent.MoccaCalendarEventClass_0_title" type="text" name="title" value="$!{escapetool.xml($doc.getTitle())}" class="required" /&gt; #showvalidationmessage("val_title_already_exists") &lt;span class="val_title_notempty xErrorMsg" style="display:none;"&gt;$escapetool.xml($services.localization.render('val_title_notempty'))&lt;/span&gt; &lt;span class="val_title_notvalid xErrorMsg" style="display:none;"&gt;$escapetool.xml($services.localization.render('val_title_notvalid'))&lt;/span&gt;
#else $doc.getDisplayTitle()
#end
  ; &lt;label for="MoccaCalendarEvent.MoccaCalendarEventClass_0_startDate"&gt;$escapetool.xml($doc.displayPrettyName('startDate', false, false))&lt;span class="xRequired"&gt;&lt;/span&gt;&lt;/label&gt;
  : #displayDate('startDate')
  ; &lt;label for="MoccaCalendarEvent.MoccaCalendarEventClass_0_endDate"&gt;$escapetool.xml($doc.displayPrettyName('endDate', false, false))&lt;/label&gt;
  : #displayDate('endDate')#showvalidationmessage("val_endDate")

  ; &lt;label for="MoccaCalendarEvent.MoccaCalendarEventClass_0_allDay"&gt;$escapetool.xml($doc.displayPrettyName('allDay', false, false))&lt;/label&gt;
  : $doc.display('allDay')
  ; &lt;label for="MoccaCalendarEvent.MoccaCalendarEventClass_0_description"&gt;$escapetool.xml($doc.displayPrettyName('description', false, false))&lt;/label&gt;
  : $doc.display('description')
)))
#if($!{request.xpage}!="plain")
----

#if($xcontext.action=='view')
#if($backToCalendarDoc)
[[$services.localization.render('MoccaCalendar.calendarevent.backlink', [ $backToCalendarDoc.getDisplayTitle()])&gt;&gt;$backToCalendarDoc]]
#end
#end
#end
{{/html}}
## please do not add linebreaks here, or the "save"-button will jump if there are validation errors
#if(($xcontext.validationStatus.errors&amp;&amp;$xcontext.validationStatus.errors.size()&gt;0))$response.setStatus(400)#end
{{/velocity}}</content>
  <object>
    <name>MoccaCalendar.MoccaCalendarEventSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>8341ad2a-8410-4cad-9ad3-15fc96efeb8b</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>document.observe("xwiki:dom:loaded", function() {
  $('calendarParent').observe("change", function() {
       $('xwikidocparentinput').setValue( $F('calendarParent'));
       Event.fire($('xwikidocparentinput'), 'xwiki:suggest:selected');
  })
});</code>
    </property>
    <property>
      <name>Edit Parent</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
