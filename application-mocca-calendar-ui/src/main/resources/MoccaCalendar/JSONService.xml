<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.2" reference="MoccaCalendar.JSONService" locale="">
  <web>MoccaCalendar</web>
  <name>JSONService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1377502319000</creationDate>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1391974785000</date>
  <contentUpdateDate>1391974785000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#if("$!{request.outputSyntax}" == 'plain')
  $response.setContentType('application/json')
#end
{{/velocity}}
{{velocity filter="html" wiki="false"}}
#if($xcontext.action == 'get')
## special case: find a new unused event name
#if("$!{request.newEvent}"!="")
  #set($eventName = $request.newEvent)
  #set($wiki = $doc.wiki)
  #set($space = $doc.space)
  #if ($request.parent)
    #set($space = $xwiki.getDocument($request.parent).getSpace())
  #end
  #set($eventName = $xwiki.getUniquePageName($space, $eventName))
  $jsontool.serialize( { 'name' : $eventName } )
#else
#set($startQuery = $datetool.toDate('yyyy-M-d', $request.start))
#set($qsy = $datetool.getYear($startQuery))
#set($qsm = $datetool.getMonth($startQuery))
#set($qsm = $mathtool.add($qsm, 1))
#set($qsd = $datetool.getDay($startQuery))
## if enddate is empty, use startdate instead
#set($endDateCheck = "year(enddate.value) &gt; :startyear or (year(enddate.value) = :startyear and (month(enddate.value) &gt; :startmonth or (month(enddate.value) = :startmonth and day(enddate.value) &gt;= :startday)))")
#set($startDateCheck = "year(startdate.value) &gt; :startyear or (year(startdate.value) = :startyear and (month(startdate.value) &gt; :startmonth or (month(startdate.value) = :startmonth and day(startdate.value) &gt;= :startday)))")
#set($whereQuery = "and (enddate.value is not null and ($endDateCheck) or ($startDateCheck)) ")

#set($endQuery = $datetool.toDate('yyyy-M-d', $request.end))
#set($qey = $datetool.getYear($endQuery))
#set($qem = $datetool.getMonth($endQuery))
#set($qem = $mathtool.add($qem, 1))
#set($qed = $datetool.getDay($endQuery))
#set($whereQuery = "$whereQuery and (year(startdate.value) &lt; :endyear or ( year(startdate.value) = :endyear and (month(startdate.value) &lt; :endmonth or (month(startdate.value) = :endmonth and day(startdate.value) &lt;= :endday))))")

#set($queryParams = { "startyear" : $qsy, "startmonth" : $qsm,  "startday" : $qsd, "endyear" : $qey, "endmonth" : $qem, "endday" : $qed, "startDateField" : $request.startfield, "endDateField" : $request.endfield, "eventClass" : $request.classname })

#if("$!{request.filter}" != "" &amp;&amp; "$!{request.calendarDoc}" != "")
  #set($document = $xwiki.getDocument($request.calendarDoc))
  #if("$!{request.filter}" == "page")
    #set($whereQuery = "$whereQuery and (doc.parent = :parentDoc)")
    #set($discard = $queryParams.put('parentDoc', $request.calendarDoc))
  #end
  #if("$!{request.filter}" == "space")
    #set($document = $xwiki.getDocument($request.calendarDoc))
    #set($translated = $document.getTranslatedDocument())
    #set($space = $translated.getSpace())
    #set($whereQuery = "$whereQuery and (doc.space = :space)")
    #set($discard = $queryParams.put('space', $space))
  #end
#end

#set($direction="asc")
#if("$!{request.outputView}"=="plainList" &amp;&amp; $datetool.difference($datetool.getDate(),$endQuery).getSeconds()&lt;0)
  #set($direction="desc")
#end

#set($hql =", BaseObject as obj, DateProperty as startdate, DateProperty as enddate where doc.fullName=obj.name and obj.id=startdate.id.id and startdate.id.name=:startDateField and obj.id=enddate.id.id and enddate.id.name=:endDateField and doc.name!='MoccaCalendarEventTemplate' and obj.className= :eventClass $whereQuery order by startdate.value $direction")

#set($query = $services.query.hql($hql))
#foreach($param in $queryParams.entrySet())
  #set($query = $query.bindValue($param.key, $param.value))
#end

#set($jsondateformat = $xwiki.jodatime.getDateTimeFormatterForPattern("yyyy-MM-dd'T'HH:mm"))
#set($calDocParam = "calendarDoc=$!{escapetool.url($request.calendarDoc)}")
#set($results = [])
##set($discard = $results.add($hql))
##set($discard = $results.add($queryParams))
#foreach($item in $query.execute())
 #if($xwiki.hasAccessLevel("view", $xcontext.getUser(), $item))
  #set($itemdoc = $xwiki.getDocument($item))
  #set($parentCalDocName = $itemdoc.getParent())
  #if($parentCalDocName == "$!lastparentCalDocName")
    #set($color="$!lastColor")
  #else
    #set($lastparentCalDocName = $parentCalDocName)
    #set($color="$!xwiki.getDocument($parentCalDocName).getValue('color')")
    #set($lastColor = $color)
  #end
  #set($startdate = $itemdoc.getValue($request.startfield))
  #set($enddate = $itemdoc.getValue($request.endfield))
  #set($duration = $itemdoc.getValue($request.durationfield))
  #if(!$duration)
    #set($duration = "30")
  #end
  #if($startdate)
    #set($startdate = $xwiki.jodatime.getDateTime($startdate.getTime()))
    #if($enddate)
      #set($enddate = $xwiki.jodatime.getDateTime($enddate.getTime()))
    #else
      #set($enddate = $startdate.plusMinutes($duration))
    #end
    #set($allDay=false)
    #if("$!itemdoc.getValue('allDay')"==1)
      #set($allDay=true)
      #set($enddateExclusive = $enddate.plusDays(1))
    #else
      #set($enddateExclusive = $enddate)
    #end
    #set($event = {"id" : $itemdoc.getDocumentReference().toString(), "title" : $itemdoc.getPlainTitle(), "url" : $itemdoc.getURL('view',"$calDocParam"), "editUrl" : $itemdoc.getURL('edit',"$calDocParam"), "saveUrl" : $itemdoc.getURL('save',"$calDocParam"),  "deleteUrl" : $itemdoc.getURL('delete',"$calDocParam"), "canEdit": $xwiki.hasAccessLevel("edit", $xcontext.getUser(), $item), "canDelete": $xwiki.hasAccessLevel("delete", $xcontext.getUser(), $item), "start" : $jsondateformat.print($startdate), "end" : $jsondateformat.print($enddateExclusive), "allDay" : $allDay, "color" : $color })
    #if("$!{request.outputView}"=="plainList")
      #set($format = $!itemdoc.getObject("${request.classname}").getxWikiClass().get($request.startfield).getProperty('dateFormat').value)
      #if($!format=="")
        #set($format = $xwiki.getSpacePreference('dateformat', 'dd.MM.yyyy'))
      #end
      #if($allDay)
        #set($idx = $format.indexOf("H"))
        #if($idx &gt; 0)
          #set($format = $format.substring(0,$idx).trim())
        #end
      #end
      #set($dateprinter = $xwiki.jodatime.getDateTimeFormatterForPattern($format))
      #set($html = '&lt;div class="moccaevent" style="border-color:' +$color + '"&gt;')
      #set($html = "${html}"+'&lt;h5&gt;&lt;a href="'+${itemdoc.getURL("view")}+'"&gt;' + $escapetool.html($itemdoc.getPlainTitle()) + '&lt;/a&gt;&lt;/h5&gt;')
      #if($allDay)
        #set($discard = $services.localization.use('document', 'Calendar.Translations'))
        #set($html = "${html}" + '&lt;p class="date"&gt;' + $dateprinter.print($startdate) + ' ' + $services.localization.render('xwiki.calendar.allDayText')+'&lt;/p&gt;')
      #else
        #if($enddate.getYear() == $startdate.getYear() &amp;&amp; $enddate.getDayOfYear() == $startdate.getDayOfYear())
          #set($idx = $format.indexOf("H"))
          #if($idx &gt; 0)
            #set($timeformat = $format.substring($idx).trim())
          #else
            #set($timeformat = "HH:mm")
          #end
          #set($timeprinter = $xwiki.jodatime.getDateTimeFormatterForPattern($timeformat))
          #set($html = "${html}" + '&lt;p class="date"&gt;' + $dateprinter.print($startdate) + ' - ' + $timeprinter.print($enddate) + '&lt;/p&gt;')
        #else
          #set($html = "${html}" + '&lt;p class="date"&gt;' + $dateprinter.print($startdate) + ' - ' + $dateprinter.print($enddate) + '&lt;/p&gt;')
        #end
      #end
      #set($desc = $itemdoc.getValue('description'))
      #if($desc)
        #set($desc = $services.rendering.parse($desc, "xwiki/2.1"))
        #set($desc = $services.rendering.render($desc, "xhtml/1.0"))
        #set($html = "${html}"  + $desc )
      #end
      #set($html = "${html}&lt;/div&gt;")
      #set($discard = $event.put("html", $html))
    #end
    #set($discard = $results.add($event))
  #end
 #end
#end
$jsontool.serialize($results)
#end ## end of #if("$!{request.newEvent}"!="")
#else
Service Page for the Mocca Calendar Application
#end ## end of #if($xcontext.action == 'get')
{{/velocity}}</content>
</xwikidoc>
